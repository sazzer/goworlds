stages:
  - build
  - test

build-service:
  stage: build
  image: rust:latest
  before_script:
    - cd service
    - rustup update
    - rustup component add clippy
    - rustc --version
    - cargo --version
  script:
    - cargo check
    - cargo clippy
    - cargo test
    - cargo build
  cache:
    paths:
    - target/
  
build-service-container:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    IMAGE_TAG: $CI_REGISTRY/sazzer/goworlds/goworlds-service
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull clux/muslrust
    - (docker pull $IMAGE_TAG:build || true)
    - (docker pull $IMAGE_TAG:latest || true)
  script:
    - docker build -t $IMAGE_TAG:build --target build --cache-from $IMAGE_TAG:build service
    - docker build -t $IMAGE_TAG:latest --cache-from $IMAGE_TAG:build --cache-from $IMAGE_TAG:latest service
  after_script:
    - docker push $IMAGE_TAG:build
    - docker push $IMAGE_TAG:latest

build-e2e-container:
  stage: build
  image: docker:stable
    services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    IMAGE_TAG: $CI_REGISTRY/sazzer/goworlds/goworlds-e2e
  before_script:
    - (docker pull $IMAGE_TAG:latest || true)
  script:
    - docker build -t $IMAGE_TAG:latest --cache-from $IMAGE_TAG:latest e2e
  after_script:
    - docker push $IMAGE_TAG:latest
